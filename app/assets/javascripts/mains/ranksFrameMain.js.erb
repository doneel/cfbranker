$(document).ready(function(){
    if(window.addEventListener){
		addEventListener("message", getMessage, false);
    } else{
		attachEvent("onmessage", getMessage);
    }
    ranker = new Ranker(document.querySelector('.rankings'), null, null, buildTeamTile, remap);

    $('.banner').css('display', 'none');

});

function getMessage(event){
	ranker.updateCode(event.data.newCode);
	ranker.updateData(event.data.rawData);
        var error = ranker.run();
        if(error != undefined){
            event.source.postMessage({failFlag: true, error: stringifyError(error)}, event.origin);
            return;
        }
        else{
            event.source.postMessage({failFlag: false}, event.origin);
        }
        if(event.data.share == true){
            openResultsTab(event.data, event.source, event.origin);
            return;
        }
}

/*
 * From: Brian Larsen @ Stack Overflow
 * http://stackoverflow.com/questions/18391212/is-it-not-possible-to-stringify-an-error-using-json-stringify
 */
var stringifyError = function(err, filter, space) {
    var plainObject = {};
    Object.getOwnPropertyNames(err).forEach(function(key) {
        plainObject[key] = err[key];
    });
    return JSON.stringify(plainObject, filter, space);
};

function openResultsTab(resultsData, source, origin){
    var weekDisplayStr;
    if (resultsData.week == "Bowl"){
        weekDisplayStr = "Final Rankings";
    }else{
        weekDisplayStr = "Week " + resultsData.week;
    }
    var yourDOCTYPE = "<!DOCTYPE html>";
    var htmlCode = yourDOCTYPE+
        "<html>"+
        "<head>" + document.getElementsByTagName('head')[0].innerHTML + 
        "<script>" +
        "window.onload = function(){"+
            "var code = \"" + encodeURI(resultsData.newCode) + "\";" + 
            "editor = new CodeEditor('editor-div', 'javascript', null);" + 
            "editor.aceEditor.setEditable(false);"+
        "};" + 
        "function toggleCode(){ console.log('asdf'); codeShown = typeof(codeShown) == 'undefined' ? false : codeShown;" + 
        "if(codeShown){$('.showCodeButton').text('Show Code'); $('.resultsWrapper').removeClass('results-sided'); $('.resultsWrapper').addClass('results-centered'); codeShown = false; $('.code-container').addClass('code-container-hidden');}" + 
        "else{$('.showCodeButton').text('Hide Code'); $('.resultsWrapper').removeClass('results-centered'); $('.resultsWrapper').addClass('results-sided'); codeShown = true;$('.code-container').removeClass('code-container-hidden');}"+
        "};</script></head>"+
        "<body>"+
            "<div class=\"code-container code-container-hidden\"><div id=\"editor-div\"></div></div>" + 
            "<div class=\"resultsWrapper results-centered\">" +
            "<div class=\"resultsWeekLabel dateLabel\">" + resultsData.season + " " + weekDisplayStr + "</div>" + 
            "<div class=\" showCodeButton resultsWeekLabel\" onclick=\"toggleCode()\">Show Code</div>" + 
            document.body.innerHTML+ "</div></body>"+
            "</html>";
    console.log(htmlCode);
    source.postMessage({resultsPageFlag: true, pageHTML : htmlCode}, origin);

}

function buildTeamTile(rank, team){


    var teamTile = document.createElement('div');
    teamTile.className = 'teamTile';
    var context = this;
    teamTile.onclick = function(){
        console.log(team);
    };

    var numberingDiv = document.createElement('div');
    numberingDiv.className = 'numberingDiv';
    teamTile.appendChild(numberingDiv);

    var rankNumber = document.createElement('p');
    rankNumber.className = 'rankNumber';
    rankNumber.innerHTML = rank + 1;
    numberingDiv.appendChild(rankNumber);

    var teamSide = document.createElement('div');
    teamSide.className = 'teamSide';
    teamTile.appendChild(teamSide);

    
    var teamLogoContainer = document.createElement('div');
    teamLogoContainer.className = ' teamLogo';

    var teamLogo =  document.createElement('div');
    teamLogo.className += ' team-logo';
    teamLogo.className += ' team' + team.team_code;

    teamLogoContainer.appendChild(teamLogo);

    teamSide.appendChild(teamLogoContainer);

    var teamName = document.createElement('p');
    teamName.className = 'teamName';
    teamName.innerHTML = team.name;
    teamSide.appendChild(teamName);

    return teamTile;

}


function remap(jsonData){
    var namesMap = {};
    for(var k = 0; k < jsonData.length; k++){
        namesMap[jsonData[k].name] = jsonData[k];
    }

    var gameMap = {};
    for(var i = 0; i < jsonData.length; i++){
        var team = jsonData[i];
        for(var j = 0; j < jsonData[i].schedule.length; j++){
            var game = team.schedule[j];
            game.opp = namesMap[game.opp];
            game.team = jsonData[i];
            var mirror = gameMap[game.game_code];
            if(!mirror){
                gameMap[game.game_code] = game;
            }
            else{
                game.opp_game = mirror;
                mirror.opp_game = game;
            }
        }
    }

    return jsonData;
}

